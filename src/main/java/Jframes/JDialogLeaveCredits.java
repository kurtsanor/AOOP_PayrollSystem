/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Jframes;
import Domains.LeaveBalance;
import Model.LeaveCreditsDAO;
import java.sql.SQLException;
import javax.swing.JOptionPane;
/**
 *
 * @author admin
 */
public class JDialogLeaveCredits extends javax.swing.JDialog {
    private int employeeID;
    /**
     * Creates new form NewJDialog
     */
    public JDialogLeaveCredits(java.awt.Frame parent, boolean modal, int employeeID) {       
        super(parent, modal);
        initComponents();
        this.employeeID = employeeID;
        showEmployeeLeaveCredits(employeeID);
    }
    
    private void showEmployeeLeaveCredits(int employeeID) {
        try {
            LeaveCreditsDAO dao = new LeaveCreditsDAO();
            LeaveBalance balance = dao.getLeaveCreditsByEmpID(employeeID);
            
            jTextFieldVacationCredits.setText(String.valueOf(balance.getVacationLeaveCredits()));
            jTextFieldMedicalCredits.setText(String.valueOf(balance.getMedicalLeaveCredits()));
            jTextFieldPersonalCredits.setText(String.valueOf(balance.getPersonalLeaveCredits()));
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private boolean updateLeaveBalance() {
        boolean validInputs = true;
        try {
            int newVacationCredits = getVacationCreditsFromField();
            int newMedicalCredits = getMedicalCreditsFromField();
            int newPersonalCredits = getPersonalCreditsFromField();
            LeaveBalance newBalance = new LeaveBalance(employeeID, newVacationCredits, newMedicalCredits, newPersonalCredits);
            
            if (newVacationCredits < 0 || newMedicalCredits < 0 || newPersonalCredits < 0) {
                JOptionPane.showMessageDialog(this, "Please make sure all fields are valid integers and are non negative", "Invalid", JOptionPane.WARNING_MESSAGE);
                validInputs = false;
            }
            
            if (validInputs) {
                LeaveCreditsDAO dao = new LeaveCreditsDAO();
                boolean success = dao.updateLeaveCreditsByEmpID(employeeID, newBalance);
                showUpdateResult(success);
                return success;
            }
                                 
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }
    
    private void showUpdateResult(boolean isSuccessfull) {
        JOptionPane.showMessageDialog(this, isSuccessfull? "Leave balance updated successfully": "Failed to update balance", isSuccessfull? "Sucess": "Failed", isSuccessfull? JOptionPane.INFORMATION_MESSAGE: JOptionPane.ERROR_MESSAGE);
    }
    
    private int getVacationCreditsFromField() {
        try {
            int vacationCredits = Integer.parseInt(jTextFieldVacationCredits.getText());
            return vacationCredits;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vacation credits should be an integer", "Invalid Input", JOptionPane.WARNING_MESSAGE);
        }
        return -1;
    }
    
    private int getMedicalCreditsFromField() {
        try {
            int medicalCredits = Integer.parseInt(jTextFieldMedicalCredits.getText());
            return medicalCredits;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Medical credits should be an integer", "Invalid Input", JOptionPane.WARNING_MESSAGE);
        }
        return -1;
    }
    
    private int getPersonalCreditsFromField() {
        try {
            int personalCredits = Integer.parseInt(jTextFieldPersonalCredits.getText());
            return personalCredits;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Personal credits should be an integer", "Invalid Input", JOptionPane.WARNING_MESSAGE);
        }
        return -1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldVacationCredits = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldMedicalCredits = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldPersonalCredits = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();
        jButtonDiscard = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(400, 300));

        jPanel1.setBackground(new java.awt.Color(86, 98, 106));
        jPanel1.setMinimumSize(new java.awt.Dimension(450, 300));
        jPanel1.setPreferredSize(new java.awt.Dimension(450, 300));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Vacation Credits");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 10);
        jPanel1.add(jLabel1, gridBagConstraints);

        jTextFieldVacationCredits.setPreferredSize(new java.awt.Dimension(85, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        jPanel1.add(jTextFieldVacationCredits, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Medical Credits");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 10);
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextFieldMedicalCredits.setPreferredSize(new java.awt.Dimension(85, 30));
        jTextFieldMedicalCredits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMedicalCreditsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        jPanel1.add(jTextFieldMedicalCredits, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Personal Credits");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 30, 10);
        jPanel1.add(jLabel3, gridBagConstraints);

        jTextFieldPersonalCredits.setPreferredSize(new java.awt.Dimension(85, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 30, 5);
        jPanel1.add(jTextFieldPersonalCredits, gridBagConstraints);

        jButtonSave.setBackground(new java.awt.Color(0, 183, 229));
        jButtonSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonSave.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel1.add(jButtonSave, gridBagConstraints);

        jButtonDiscard.setText("Discard");
        jButtonDiscard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDiscardActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel1.add(jButtonDiscard, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Adjust Leave Credits");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 20, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldMedicalCreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMedicalCreditsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMedicalCreditsActionPerformed

    private void jButtonDiscardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDiscardActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonDiscardActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        boolean success = updateLeaveBalance();
        if (success) {
            this.dispose();
        }      
    }//GEN-LAST:event_jButtonSaveActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDiscard;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldMedicalCredits;
    private javax.swing.JTextField jTextFieldPersonalCredits;
    private javax.swing.JTextField jTextFieldVacationCredits;
    // End of variables declaration//GEN-END:variables
}
