/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Ui;
import Dao.CredentialsDAO;
import java.sql.SQLException;
import javax.swing.JOptionPane;
/**
 *
 * @author admin
 */
public class JDialogChangePassword extends javax.swing.JDialog {

    /**
     * Creates new form JDialogChangePassword
     */
    private final int employeeID;
    public JDialogChangePassword(java.awt.Frame parent, boolean modal, int employeeID) {
        super(parent, modal);
        initComponents();
        this.employeeID = employeeID;
        hideErrorLabels();
    }
    
    private boolean checkIfEmptyFields() {
        boolean isValid = true;
        if (jPasswordFieldCurrent.getPassword().length < 1) {
            jLabelCurrentPasswordError.setText("This is required");
            jLabelCurrentPasswordError.setVisible(true);
            isValid = false;
        }
        if (jPasswordFieldNew.getPassword().length < 1) {
            jLabelNewPasswordError.setText("This is required");
            jLabelNewPasswordError.setVisible(true);
            isValid = false;
        }
        return isValid;
    }
    
    private void hideErrorLabels() {
        jLabelCurrentPasswordError.setVisible(false);
        jLabelNewPasswordError.setVisible(false);
    }
    
    private void showResult(boolean isSuccessful) {
        JOptionPane.showMessageDialog(this, isSuccessful ?"Password changed successfully": "There was a problem changing your password", isSuccessful? "Success": "Failed", isSuccessful? JOptionPane.INFORMATION_MESSAGE: JOptionPane.ERROR_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonChangePassword = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabelCurrentPasswordError = new javax.swing.JLabel();
        jLabelNewPasswordError = new javax.swing.JLabel();
        jPasswordFieldCurrent = new javax.swing.JPasswordField();
        jPasswordFieldNew = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(86, 98, 106));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Change your password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(40, 35, 5, 35);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Current password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 5, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("New password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 35, 5, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jButtonChangePassword.setBackground(new java.awt.Color(0, 183, 229));
        jButtonChangePassword.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonChangePassword.setForeground(new java.awt.Color(255, 255, 255));
        jButtonChangePassword.setText("Change Password");
        jButtonChangePassword.setPreferredSize(new java.awt.Dimension(75, 35));
        jButtonChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangePasswordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 35, 40, 35);
        jPanel1.add(jButtonChangePassword, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter your current and new password below");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 40, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabelCurrentPasswordError.setForeground(new java.awt.Color(255, 102, 102));
        jLabelCurrentPasswordError.setText("This is required");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel1.add(jLabelCurrentPasswordError, gridBagConstraints);

        jLabelNewPasswordError.setForeground(new java.awt.Color(255, 102, 102));
        jLabelNewPasswordError.setText("This is required");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        jPanel1.add(jLabelNewPasswordError, gridBagConstraints);

        jPasswordFieldCurrent.setPreferredSize(new java.awt.Dimension(90, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 35);
        jPanel1.add(jPasswordFieldCurrent, gridBagConstraints);

        jPasswordFieldNew.setPreferredSize(new java.awt.Dimension(90, 35));
        jPasswordFieldNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldNewActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 35);
        jPanel1.add(jPasswordFieldNew, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangePasswordActionPerformed
        // TODO add your handling code here:
        jLabelCurrentPasswordError.setVisible(false);
        jLabelNewPasswordError.setVisible(false);
        boolean isValid = checkIfEmptyFields();
        if (!isValid) return;
        
        try {
            CredentialsDAO dao = new CredentialsDAO();
            String currentPassword = new String (jPasswordFieldCurrent.getPassword());
            boolean isCorrectPassword = dao.isEmployeePasswordCorrect(employeeID, currentPassword);
            if (!isCorrectPassword) {
                jLabelCurrentPasswordError.setText("Incorrect password");
                jLabelCurrentPasswordError.setVisible(true);
                return;               
            }
            String newPassword = new String (jPasswordFieldNew.getPassword());          
            boolean isPasswordChangeSuccess = dao.updatePasswordByEmployeeID(employeeID, newPassword);
            showResult(isPasswordChangeSuccess);
            this.dispose();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonChangePasswordActionPerformed

    private void jPasswordFieldNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordFieldNewActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonChangePassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelCurrentPasswordError;
    private javax.swing.JLabel jLabelNewPasswordError;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordFieldCurrent;
    private javax.swing.JPasswordField jPasswordFieldNew;
    // End of variables declaration//GEN-END:variables
}
